name: Deploy Flask App to Touge Server

# 触发条件：当代码推送到main分支时执行
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest  # 使用GitHub提供的Ubuntu环境

    steps:
      # 步骤1：拉取GitHub仓库代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤2：配置Python环境（用于本地测试）
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'  # 与头歌服务器Python版本保持一致

      # 步骤3：安装依赖并运行测试（确保代码可正常工作）
      - name: Install dependencies and run tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest  # 安装测试工具
          pytest  # 运行测试用例（需确保项目中有测试文件）

      # 步骤4：通过SSH连接头歌服务器，部署最新代码
      - name: Deploy to Touge Server via SSH
        run: |
          # 配置SSH连接（禁用严格主机密钥检查）
          mkdir -p ~/.ssh
          echo "${{ secrets.TOUGE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.TOUGE_SERVER_IP }} >> ~/.ssh/known_hosts

          # 通过SSH执行部署命令
          ssh root@${{ secrets.TOUGE_SERVER_IP }} << 'EOF'
            # 进入项目目录
            cd /root/flask-web-app

            # 拉取最新代码
            git pull origin main

            # 更新项目依赖
            pip3 install -r requirements.txt

            # 重启Supervisor管理的应用
            supervisorctl restart flask-web-app

            # 输出应用状态（便于调试）
            supervisorctl status flask-web-app
          EOF
        env:
          # 从GitHub Secrets中获取敏感信息
          TOUGE_SSH_PRIVATE_KEY: ${{ secrets.TOUGE_SSH_PRIVATE_KEY }}
          TOUGE_SERVER_IP: ${{ secrets.TOUGE_SERVER_IP }}
